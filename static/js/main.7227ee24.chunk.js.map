{"version":3,"sources":["Loading.js","Error.js","SeasonDisplay.js","index.js"],"names":["Loading","props","className","message","defaultProps","Error","seasonConfig","summer","text","iconName","winter","SeasonDisplay","lat","month","season","Date","getMonth","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"6MAEMA,EAAU,SAACC,GACf,OACE,qBAAKC,UAAU,mBAAf,SACE,qBAAKA,UAAU,uBAAf,SAAuCD,EAAME,aAMnDH,EAAQI,aAAe,CACrBD,QAAS,cAGIH,QCbTK,EAAQ,SAACJ,GACb,OAAO,qBAAKC,UAAS,gBAAd,SAAkCD,EAAME,WAIjDE,EAAMD,aAAe,CACnBD,QAAS,aAGIE,QCPTC,G,MAAe,CACnBC,OAAQ,CACNC,KAAM,sBACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,qBACNC,SAAU,eA4BCE,EAdO,SAACV,GACrB,IAViBW,EAAKC,EAUhBC,GAVWF,EAUQX,EAAMW,KAVTC,GAUc,IAAIE,MAAOC,YATnC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAO9B,EAA2BN,EAAaQ,GAAhCN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SAEd,OACE,sBAAKP,UAAS,yBAAoBY,GAAlC,UACE,mBAAGZ,UAAS,6BAAwBO,EAAxB,WACZ,6BAAKD,IACL,mBAAGN,UAAS,6BAAwBO,EAAxB,WACZ,qBAAKP,UAAS,kBC1Bde,E,4MAEJC,MAAQ,CAAEN,IAAK,KAAMO,aAAc,I,uDAGnC,WAAqB,IAAD,OAClBC,OAAOC,UAAUC,YAAYC,oBAE3B,SAACC,GAAD,OAEE,EAAKC,SAAS,CAAEb,IAAKY,EAASE,OAAOC,cACvC,SAACC,GAAD,OAAS,EAAKH,SAAS,CAAEN,aAAcS,EAAIzB,e,2BAI/C,WACE,OAAI0B,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMN,IAEvC,cAAC,EAAD,CAAOT,QAAQ,yCAAf,SACG0B,KAAKX,MAAMC,gBAKbU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMN,IAClC,cAAC,EAAD,CAAeA,IAAKiB,KAAKX,MAAMN,MAEjC,cAAC,EAAD,CAAST,QAAQ,sC,oBAI1B,WACE,OAAO,qBAAKD,UAAU,OAAf,SAAuB2B,KAAKC,sB,GAhCrBC,IAAMC,WAoCxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.7227ee24.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Loading = (props) => {\n  return (\n    <div className=\"ui active dimmer\">\n      <div className=\"ui large text loader\">{props.message}</div>\n    </div>\n  );\n};\n\n//alternative props used when we don't declare a message props in the father component\nLoading.defaultProps = {\n  message: \"Loading...\",\n};\n\nexport default Loading;\n","import React from \"react\";\n\nconst Error = (props) => {\n  return <div className={`error-display`}>{props.message}</div>;\n};\n\n//alternative props used when we don't declare a message propsin the father component\nError.defaultProps = {\n  message: \"Error 404\",\n};\n\nexport default Error;\n","import \"./SeasonDisplay.css\";\nimport React from \"react\";\n\n//config for the function\nconst seasonConfig = {\n  summer: {\n    text: \"Lets hit the beach!\",\n    iconName: \"sun\",\n  },\n  winter: {\n    text: \"Burr, it is chilly\",\n    iconName: \"snowflake\",\n  },\n};\n\n//helper function\nconst getSeason = (lat, month) => {\n  if (month > 2 && month < 9) {\n    return lat > 0 ? \"summer\" : \"winter\";\n  } else {\n    return lat > 0 ? \"winter\" : \"summer\";\n  }\n};\n\n// the real functional component\nconst SeasonDisplay = (props) => {\n  const season = getSeason(props.lat, new Date().getMonth());\n  const { text, iconName } = seasonConfig[season];\n\n  return (\n    <div className={`season-display ${season}`}>\n      <i className={`icon-left  massive ${iconName} icon`} />\n      <h1>{text}</h1>\n      <i className={`icon-right massive ${iconName} icon`} />\n      <div className={`container`}></div>\n    </div>\n  );\n};\n\nexport default SeasonDisplay;\n\n//<i class=\"sun icon\"></i> || <i class=\"snowflake icon\"></i>\n","import \"semantic-ui-css/semantic.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Loading from \"./Loading\";\nimport Error from \"./Error\";\nimport SeasonDisplay from \"./SeasonDisplay\";\n\n//Class are better to organize, we can use lifecycle methods\nclass App extends React.Component {\n  // we can inicialize the state like this, don't need always a constructor\n  state = { lat: null, errorMessage: \"\" };\n\n  // componentDidMount it's used just one time along the code, a good place to data loading!\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      //this is a callback c:\n      (position) =>\n        //calling setState\n        this.setState({ lat: position.coords.latitude }),\n      (err) => this.setState({ errorMessage: err.message })\n    );\n  }\n\n  renderContent() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return (\n        <Error message=\"Oops! something went wrong, try again.\">\n          {this.state.errorMessage}\n        </Error>\n      );\n    }\n    /* passing the state lat as a props to my component of SeasonDisplay*/\n    if (!this.state.errorMessage && this.state.lat) {\n      return <SeasonDisplay lat={this.state.lat} />;\n    }\n    return <Loading message=\"Please accept location request.\" />;\n  }\n\n  //always return JSX:\n  render() {\n    return <div className=\"main\">{this.renderContent()}</div>;\n  }\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}